{"ast":null,"code":"import*as yup from\"yup\";var holderRule=/^[A-Za-z0-9 ]+$/;var numberRule=/^[\\d\\s]+$/;var monthRule=/^0*([1-9]|1[0-2])$/;var yearRule=/^(2[2-6])$/;export var basicSchema=yup.object().shape({holder:yup.string().matches(holderRule,\"Wrong format, letters only\").min(5,\"Cardholder name to short\").required(\"Can't be blank\"),number:yup.string().matches(numberRule,\"Wrong format, numbers only\").min(19,\"Number must be 16 characters\").required(\"Can't be blank\"),month:yup.string().matches(numberRule,\"Wrong format, numbers only\").matches(monthRule,\"Invalid number\").min(2,\"Must be two digits\").required(\"Can't be blank\"),year:yup.string().matches(numberRule,\"Wrong format, numbers only\").matches(yearRule,\"Invalid number\").min(2,\"Must be two digits\").required(\"Can't be blank\"),cvc:yup.string().matches(numberRule,\"Wrong format, numbers only\").min(3,\"Must be three digits\").required(\"Can't be blank\")});","map":{"version":3,"names":["yup","holderRule","numberRule","monthRule","yearRule","basicSchema","object","shape","holder","string","matches","min","required","number","month","year","cvc"],"sources":["/Users/Roma/Desktop/app/src/schemas/index.js"],"sourcesContent":["import * as yup from \"yup\";\n\nconst holderRule = /^[A-Za-z0-9 ]+$/;\nconst numberRule = /^[\\d\\s]+$/;\nconst monthRule = /^0*([1-9]|1[0-2])$/;\nconst yearRule = /^(2[2-6])$/;\n\nexport const basicSchema = yup.object().shape({\n  holder: yup\n    .string()\n    .matches(holderRule, \"Wrong format, letters only\")\n    .min(5, \"Cardholder name to short\")\n    .required(\"Can't be blank\"),\n  number: yup\n    .string()\n    .matches(numberRule, \"Wrong format, numbers only\")\n    .min(19, \"Number must be 16 characters\")\n    .required(\"Can't be blank\"),\n  month: yup\n    .string()\n    .matches(numberRule, \"Wrong format, numbers only\")\n    .matches(monthRule, \"Invalid number\")\n    .min(2, \"Must be two digits\")\n    .required(\"Can't be blank\"),\n  year: yup\n    .string()\n    .matches(numberRule, \"Wrong format, numbers only\")\n    .matches(yearRule, \"Invalid number\")\n    .min(2, \"Must be two digits\")\n    .required(\"Can't be blank\"),\n  cvc: yup\n    .string()\n    .matches(numberRule, \"Wrong format, numbers only\")\n    .min(3, \"Must be three digits\")\n    .required(\"Can't be blank\"),\n});\n"],"mappings":"AAAA,MAAO,GAAKA,IAAZ,KAAqB,KAArB,CAEA,GAAMC,WAAU,CAAG,iBAAnB,CACA,GAAMC,WAAU,CAAG,WAAnB,CACA,GAAMC,UAAS,CAAG,oBAAlB,CACA,GAAMC,SAAQ,CAAG,YAAjB,CAEA,MAAO,IAAMC,YAAW,CAAGL,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB,CAC5CC,MAAM,CAAER,GAAG,CACRS,MADK,GAELC,OAFK,CAEGT,UAFH,CAEe,4BAFf,EAGLU,GAHK,CAGD,CAHC,CAGE,0BAHF,EAILC,QAJK,CAII,gBAJJ,CADoC,CAM5CC,MAAM,CAAEb,GAAG,CACRS,MADK,GAELC,OAFK,CAEGR,UAFH,CAEe,4BAFf,EAGLS,GAHK,CAGD,EAHC,CAGG,8BAHH,EAILC,QAJK,CAII,gBAJJ,CANoC,CAW5CE,KAAK,CAAEd,GAAG,CACPS,MADI,GAEJC,OAFI,CAEIR,UAFJ,CAEgB,4BAFhB,EAGJQ,OAHI,CAGIP,SAHJ,CAGe,gBAHf,EAIJQ,GAJI,CAIA,CAJA,CAIG,oBAJH,EAKJC,QALI,CAKK,gBALL,CAXqC,CAiB5CG,IAAI,CAAEf,GAAG,CACNS,MADG,GAEHC,OAFG,CAEKR,UAFL,CAEiB,4BAFjB,EAGHQ,OAHG,CAGKN,QAHL,CAGe,gBAHf,EAIHO,GAJG,CAIC,CAJD,CAII,oBAJJ,EAKHC,QALG,CAKM,gBALN,CAjBsC,CAuB5CI,GAAG,CAAEhB,GAAG,CACLS,MADE,GAEFC,OAFE,CAEMR,UAFN,CAEkB,4BAFlB,EAGFS,GAHE,CAGE,CAHF,CAGK,sBAHL,EAIFC,QAJE,CAIO,gBAJP,CAvBuC,CAAnB,CAApB"},"metadata":{},"sourceType":"module"}